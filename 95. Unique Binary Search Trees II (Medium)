# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def generateTrees(self, n: int) -> List[Optional[TreeNode]]:
        if n==0:
            return [] 
        
        def helper(start, end):
            ans = []
            if start > end:
                return [None]
            if start == end:
                return [TreeNode(start)]
            for i in range(start, end+1):
                l = helper(start,i-1)
                r = helper(i+1,end)
                for left in l:
                    for right in r:
                        root = TreeNode(i, left, right)
                        ans.append(root)
            return ans    
        return helper(1, n)     
